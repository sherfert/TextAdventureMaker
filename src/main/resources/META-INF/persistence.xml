<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
	<persistence-unit name="textAdventureMaker"
		transaction-type="RESOURCE_LOCAL">

		<!-- All data classes. -->
		<class>data.action.AbstractAction</class>
		<class>data.action.AddInventoryItemsAction</class>
		<class>data.action.ChangeNamedObjectAction</class>
		<class>data.action.MoveAction</class>
		<class>data.action.RemoveInventoryItemAction</class>
		<class>data.action.SetItemLocationAction</class>
		<class>data.Game</class>
		<class>data.InventoryItem</class>
		<class>data.InventoryItem$CombinableInventoryItem</class>
		<class>data.InventoryItem$UsableItem</class>
		<class>data.Item</class>
		<class>data.Location</class>
		<class>data.NamedObject</class>
		<class>data.Person</class>
		<class>data.Player</class>
		<class>data.UsableObject</class>
		<class>data.Way</class>

		<properties>
			<!-- Default database login using Oracle for EclipseLink's internal connection 
				pool, change this to access your own database. -->
			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:C:\test.db" />
			<!-- <property name="javax.persistence.jdbc.user" value="scott" /> <property 
				name="javax.persistence.jdbc.password" value="tiger" /> -->

			<!-- The database platform is auto-detected by default, if you want to 
				set a specific platform this can be set. -->
			<!-- property name=""eclipselink.target-database" value="Oracle" / -->

			<!-- Optimize database writes to use batching. -->
			<property name="eclipselink.jdbc.batch-writing" value="JDBC" />

			<!-- Avoids flush being triggered before every query execution. -->
			<property name="eclipselink.persistence-context.flush-mode"
				value="COMMIT" />

			<!-- Configure connection pool. -->
			<property name="eclipselink.jdbc.connections.initial" value="1" />
			<property name="eclipselink.jdbc.connections.min" value="64" />
			<property name="eclipselink.jdbc.connections.max" value="64" />

			<!-- In JSE no server platform is used, if you wish to use this example 
				is a JEE server with JTA, then you need to set this. -->
			<!-- property name="eclipselink.target-server" value="WebLogic" / -->

			<!-- Configure cache size. -->
			<property name="eclipselink.cache.size.default" value="1000" />
			<!-- If desired, this option would disable caching. -->
			<!-- property name="eclipselink.cache.shared.default" value="false" / -->

			<!-- If desired, this option would force a JDBC connection to be held 
				for the duration of an EntityManager, instead of returned to the pool in 
				between queries/transactions. -->
			<!-- property name="eclipselink.jdbc.exclusive-connection.mode" value="Always" 
				/ -->

			<!-- Configure database to be created on startup if not already existing. -->
			<!-- <property name="eclipselink.ddl-generation" value="create-tables" 
				/> -->
			<!-- To drop and replace existing schema this can be used. -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />

			<!-- Configure simple SQL logging for demonstration. -->
			<property name="eclipselink.logging.level" value="FINE" />
			<property name="eclipselink.logging.thread" value="false" />
			<property name="eclipselink.logging.session" value="false" />
			<property name="eclipselink.logging.exceptions" value="false" />
			<property name="eclipselink.logging.timestamp" value="false" />
		</properties>
	</persistence-unit>
</persistence>